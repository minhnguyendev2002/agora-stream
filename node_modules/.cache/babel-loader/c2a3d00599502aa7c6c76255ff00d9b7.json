{"ast":null,"code":"const readDefaultState = () => {\n  try {\n    return JSON.parse(window.sessionStorage.getItem('custom_storage'));\n  } catch (err) {\n    return {};\n  }\n};\nconst defaultState = {\n  // loading effect\n  loading: false,\n  // media devices\n  streams: [],\n  localStream: null,\n  currentStream: null,\n  otherStreams: [],\n  devicesList: [],\n  // web sdk params\n  config: {\n    uid: 0,\n    host: true,\n    channelName: '',\n    token: process.env.REACT_APP_AGORA_APP_TOKEN,\n    resolution: '480p',\n    ...readDefaultState(),\n    microphoneId: '',\n    cameraId: ''\n  },\n  agoraClient: null,\n  mode: 'live',\n  codec: 'vp8',\n  muteVideo: false,\n  muteAudio: false,\n  screen: false,\n  profile: false\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'config':\n      {\n        return {\n          ...state,\n          config: action.payload\n        };\n      }\n    case 'client':\n      {\n        return {\n          ...state,\n          client: action.payload\n        };\n      }\n    case 'loading':\n      {\n        return {\n          ...state,\n          loading: action.payload\n        };\n      }\n    case 'codec':\n      {\n        return {\n          ...state,\n          codec: action.payload\n        };\n      }\n    case 'video':\n      {\n        return {\n          ...state,\n          muteVideo: action.payload\n        };\n      }\n    case 'audio':\n      {\n        return {\n          ...state,\n          muteAudio: action.payload\n        };\n      }\n    case 'screen':\n      {\n        return {\n          ...state,\n          screen: action.payload\n        };\n      }\n    case 'devicesList':\n      {\n        return {\n          ...state,\n          devicesList: action.payload\n        };\n      }\n    case 'localStream':\n      {\n        return {\n          ...state,\n          localStream: action.payload\n        };\n      }\n    case 'profile':\n      {\n        return {\n          ...state,\n          profile: action.payload\n        };\n      }\n    case 'currentStream':\n      {\n        const {\n          streams\n        } = state;\n        const newCurrentStream = action.payload;\n        const otherStreams = streams.filter(it => it.getId() !== newCurrentStream.getId());\n        return {\n          ...state,\n          currentStream: newCurrentStream,\n          otherStreams\n        };\n      }\n    case 'addStream':\n      {\n        const {\n          streams,\n          currentStream\n        } = state;\n        const newStream = action.payload;\n        let newCurrentStream = currentStream;\n        if (!newCurrentStream) {\n          newCurrentStream = newStream;\n        }\n        if (streams.length === 4) return {\n          ...state\n        };\n        const newStreams = [...streams, newStream];\n        const otherStreams = newStreams.filter(it => it.getId() !== newCurrentStream.getId());\n        return {\n          ...state,\n          streams: newStreams,\n          currentStream: newCurrentStream,\n          otherStreams\n        };\n      }\n    case 'removeStream':\n      {\n        const {\n          streams,\n          currentStream\n        } = state;\n        const {\n          stream,\n          uid\n        } = action;\n        const targetId = stream ? stream.getId() : uid;\n        let newCurrentStream = currentStream;\n        const newStreams = streams.filter(stream => stream.getId() !== targetId);\n        if (currentStream && targetId === currentStream.getId()) {\n          if (newStreams.length === 0) {\n            newCurrentStream = null;\n          } else {\n            newCurrentStream = newStreams[0];\n          }\n        }\n        const otherStreams = newCurrentStream ? newStreams.filter(it => it.getId() !== newCurrentStream.getId()) : [];\n        return {\n          ...state,\n          streams: newStreams,\n          currentStream: newCurrentStream,\n          otherStreams\n        };\n      }\n    case 'clearAllStream':\n      {\n        // const {streams, localStream, currentStream, beauty} = state;\n        const {\n          streams,\n          localStream,\n          currentStream\n        } = state;\n        streams.forEach(stream => {\n          if (stream.isPlaying()) {\n            stream.stop();\n          }\n          // stream.close();\n        });\n\n        if (localStream) {\n          localStream.isPlaying() && localStream.stop();\n          localStream.close();\n        }\n        if (currentStream) {\n          currentStream.isPlaying() && currentStream.stop();\n          currentStream.close();\n        }\n        return {\n          ...state,\n          currentStream: null,\n          localStream: null,\n          streams: []\n        };\n      }\n    // case 'enableBeauty': {\n    //   return {\n    //     ...state,\n    //     beauty: action.enable\n    //   }\n    // }\n    default:\n      throw new Error('mutation type not defined');\n  }\n};\nexport { reducer, defaultState };","map":{"version":3,"names":["readDefaultState","JSON","parse","window","sessionStorage","getItem","err","defaultState","loading","streams","localStream","currentStream","otherStreams","devicesList","config","uid","host","channelName","token","process","env","REACT_APP_AGORA_APP_TOKEN","resolution","microphoneId","cameraId","agoraClient","mode","codec","muteVideo","muteAudio","screen","profile","reducer","state","action","type","payload","client","newCurrentStream","filter","it","getId","newStream","length","newStreams","stream","targetId","forEach","isPlaying","stop","close","Error"],"sources":["D:/Project/Freelance/Wm-Bank/API-Examples-Web/react/open-live/src/utils/store.js"],"sourcesContent":["const readDefaultState = () => {\n    try {\n        return JSON.parse(window.sessionStorage.getItem('custom_storage'))\n    } catch (err) {\n        return {}\n    }\n}\n\nconst defaultState = {\n    // loading effect\n    loading: false,\n    // media devices\n    streams: [],\n    localStream: null,\n    currentStream: null,\n    otherStreams: [],\n    devicesList: [],\n    // web sdk params\n    config: {\n        uid: 0,\n        host: true,\n        channelName: '',\n        token: process.env.REACT_APP_AGORA_APP_TOKEN,\n        resolution: '480p',\n        ...readDefaultState(),\n        microphoneId: '',\n        cameraId: ''\n    },\n    agoraClient: null,\n    mode: 'live',\n    codec: 'vp8',\n    muteVideo: false,\n    muteAudio: false,\n    screen: false,\n    profile: false\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'config': {\n            return {...state, config: action.payload}\n        }\n        case 'client': {\n            return {...state, client: action.payload}\n        }\n        case 'loading': {\n            return {...state, loading: action.payload}\n        }\n        case 'codec': {\n            return {...state, codec: action.payload}\n        }\n        case 'video': {\n            return {...state, muteVideo: action.payload}\n        }\n        case 'audio': {\n            return {...state, muteAudio: action.payload}\n        }\n        case 'screen': {\n            return {...state, screen: action.payload}\n        }\n        case 'devicesList': {\n            return {...state, devicesList: action.payload}\n        }\n        case 'localStream': {\n            return {...state, localStream: action.payload}\n        }\n        case 'profile': {\n            return {...state, profile: action.payload}\n        }\n        case 'currentStream': {\n            const {streams} = state\n            const newCurrentStream = action.payload\n            const otherStreams = streams.filter(\n                (it) => it.getId() !== newCurrentStream.getId()\n            )\n            return {...state, currentStream: newCurrentStream, otherStreams}\n        }\n        case 'addStream': {\n            const {streams, currentStream} = state\n            const newStream = action.payload\n            let newCurrentStream = currentStream\n            if (!newCurrentStream) {\n                newCurrentStream = newStream\n            }\n            if (streams.length === 4) return {...state}\n            const newStreams = [...streams, newStream]\n            const otherStreams = newStreams.filter(\n                (it) => it.getId() !== newCurrentStream.getId()\n            )\n            return {\n                ...state,\n                streams: newStreams,\n                currentStream: newCurrentStream,\n                otherStreams\n            }\n        }\n        case 'removeStream': {\n            const {streams, currentStream} = state\n            const {stream, uid} = action\n            const targetId = stream ? stream.getId() : uid\n            let newCurrentStream = currentStream\n            const newStreams = streams.filter(\n                (stream) => stream.getId() !== targetId\n            )\n            if (currentStream && (targetId === currentStream.getId())) {\n                if (newStreams.length === 0) {\n                    newCurrentStream = null\n                } else {\n                    newCurrentStream = newStreams[0]\n                }\n            }\n            const otherStreams = newCurrentStream\n                ? newStreams.filter((it) => it.getId() !== newCurrentStream.getId())\n                : []\n            return {\n                ...state,\n                streams: newStreams,\n                currentStream: newCurrentStream,\n                otherStreams\n            }\n        }\n        case 'clearAllStream': {\n            // const {streams, localStream, currentStream, beauty} = state;\n            const {streams, localStream, currentStream} = state\n            streams.forEach((stream) => {\n                if (stream.isPlaying()) {\n                    stream.stop()\n                }\n                // stream.close();\n            })\n\n            if (localStream) {\n                localStream.isPlaying() && localStream.stop()\n                localStream.close()\n            }\n            if (currentStream) {\n                currentStream.isPlaying() && currentStream.stop()\n                currentStream.close()\n            }\n            return {...state, currentStream: null, localStream: null, streams: []}\n        }\n        // case 'enableBeauty': {\n        //   return {\n        //     ...state,\n        //     beauty: action.enable\n        //   }\n        // }\n        default:\n            throw new Error('mutation type not defined')\n    }\n}\n\nexport {reducer, defaultState}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}