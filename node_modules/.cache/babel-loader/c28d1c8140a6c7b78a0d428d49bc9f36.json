{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Freelance\\\\Wm-Bank\\\\API-Examples-Web\\\\react\\\\open-live\\\\src\\\\pages\\\\meeting.jsx\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useGlobalState, useGlobalMutation } from '../utils/container';\nimport useRouter from '../utils/use-router';\nimport RTCClient from '../rtc-client';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport StreamPlayer from './meeting/stream-player';\nimport StreamMenu from './meeting/stream-menu';\nconst MeetingPage = () => {\n  const routerCtx = useRouter();\n  const stateCtx = useGlobalState();\n  const mutationCtx = useGlobalMutation();\n  const onUserPublished = (remoteUser, mediaType) => {\n    // remoteUser:\n    // mediaType: \"audio\" | \"video\" | \"all\"\n    console.debug(`onUserPublished ${remoteUser.uid}, mediaType= ${mediaType}`);\n    localClient.subscribe(remoteUser, mediaType).then(mRemoteTrack => {\n      addRemoteUser(remoteUser);\n    }).catch(err => {\n      mutationCtx.toastError(`stream ${remoteUser.getId()} subscribe failed: ${err}`);\n    });\n    if (mediaType === 'video' || mediaType === 'all') {}\n    if (mediaType === 'audio' || mediaType === 'all') {}\n  };\n  const onUserUnPublished = (remoteUser, mediaType) => {\n    // remoteUser:\n    // mediaType: \"audio\" | \"video\" | \"all\"\n    console.debug(`onUserUnPublished ${remoteUser.uid}`);\n    removeRemoteUser(remoteUser);\n    if (mediaType === 'video' || mediaType === 'all') {}\n    if (mediaType === 'audio' || mediaType === 'all') {}\n  };\n  const localClient = useMemo(() => {\n    const client = new RTCClient();\n    client.createClient({\n      codec: stateCtx.codec,\n      mode: stateCtx.mode\n    });\n    client.on('connection-state-change', mutationCtx.connectionStateChanged);\n    client.on('user-published', onUserPublished);\n    client.on('user-unpublished', onUserUnPublished);\n    return client;\n  }, [stateCtx.codec, stateCtx.mode]);\n  const [muteVideo, setMuteVideo] = useState(stateCtx.muteVideo);\n  const [muteAudio, setMuteAudio] = useState(stateCtx.muteAudio);\n  const [isShareScreen, setShareScreen] = useState(false);\n  const [VideoTrack, setVideoTrack] = useState(null);\n  const [AudioTrack, setAudioTrack] = useState(null);\n  const [remoteUsers, setRemoteUsers] = useState({});\n  const addRemoteUser = remoteUser => {\n    remoteUsers[remoteUser.uid] = remoteUser;\n    setRemoteUsers(remoteUsers);\n  };\n  const removeRemoteUser = remoteUser => {\n    delete remoteUsers[remoteUser.uid];\n    setRemoteUsers(remoteUsers);\n  };\n  const config = useMemo(() => {\n    return {\n      token: stateCtx.config.token,\n      channel: stateCtx.config.channelName,\n      microphoneId: stateCtx.config.microphoneId,\n      cameraId: stateCtx.config.cameraId,\n      uid: stateCtx.config.uid,\n      host: stateCtx.config.host\n    };\n  }, [stateCtx, muteVideo, muteAudio]);\n  const history = routerCtx.history;\n  const params = new URLSearchParams(window.location.search);\n  useEffect(() => {\n    const roleParams = params.get('role');\n    if (!config.channel && roleParams !== 'audience') {\n      history.push('/');\n    }\n  }, [config.channel, history, params]);\n  useEffect(() => {\n    if (config.channel && localClient._created && localClient._joined === false && localClient._leave === false) {\n      localClient.setClientRole(config.host ? 'host' : 'audience');\n      localClient.join(config.channel, config.token).then(uid => {\n        config.uid = uid;\n        if (config.host) {\n          localClient.startLive(config.microphoneId, config.cameraId).then(() => {\n            setVideoTrack(localClient.mLocalVideoTrack);\n            setAudioTrack(localClient.mLocalAudioTrack);\n          });\n        }\n        mutationCtx.stopLoading();\n      }).catch(err => {\n        mutationCtx.toastError(`join error: ${err.info}`);\n        routerCtx.history.push('/');\n      });\n    }\n  }, [localClient, mutationCtx, config, routerCtx]);\n  const toggleVideo = () => {\n    const newValue = !muteVideo;\n    if (newValue) {\n      localClient._client.unpublish(VideoTrack);\n    } else {\n      localClient._client.publish(VideoTrack);\n    }\n    setMuteVideo(newValue);\n  };\n  const toggleAudio = () => {\n    const newValue = !muteAudio;\n    if (newValue) {\n      localClient._client.unpublish(AudioTrack);\n    } else {\n      localClient._client.publish(AudioTrack);\n    }\n    setMuteAudio(newValue);\n  };\n  const toggleShareScreen = () => {\n    const newValue = !isShareScreen;\n    if (newValue) {\n      setShareScreen(newValue);\n      setMuteVideo(false);\n      setMuteAudio(false);\n      localClient.stopLive();\n      localClient.startShareScrren().then(() => {\n        setVideoTrack(localClient.mLocalVideoTrack);\n        setAudioTrack(localClient.mLocalAudioTrack);\n      }).catch(err => {\n        mutationCtx.toastError(`屏幕分享失败 code= ${err.code}`);\n      });\n    } else {\n      localClient.stopShareScrren();\n      localClient.startLive(config.microphoneId, config.cameraId).then(() => {\n        setShareScreen(newValue);\n        setVideoTrack(localClient.mLocalVideoTrack);\n        setAudioTrack(localClient.mLocalAudioTrack);\n      });\n    }\n  };\n  const doLeave = () => {\n    localClient.leave().then(() => {\n      localClient.stopLive();\n      localClient.destroy();\n      routerCtx.history.push('/');\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meeting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"current-view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"default-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, \"Agora Test\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"like\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"quit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quit\",\n    onClick: doLeave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(StreamPlayer, {\n    uid: config.uid,\n    isLocal: true,\n    videoTrack: VideoTrack,\n    audioTrack: AudioTrack,\n    muteAudio: muteAudio,\n    muteVideo: muteVideo,\n    showInfo: stateCtx.profile,\n    rtcClient: localClient._client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, config.host ? /*#__PURE__*/React.createElement(StreamMenu, {\n    muteAudio: muteAudio,\n    muteVideo: muteVideo,\n    shareScreen: isShareScreen,\n    toggleVideo: toggleVideo,\n    toggleAudio: toggleAudio,\n    toggleShareScreen: toggleShareScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 36\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stream-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, Object.values(remoteUsers).map(remoteUser => {\n    return /*#__PURE__*/React.createElement(StreamPlayer, {\n      key: `key-${remoteUser.uid}`,\n      uid: remoteUser.uid,\n      videoTrack: remoteUser.videoTrack,\n      audioTrack: remoteUser.audioTrack,\n      muteAudio: false,\n      muteVideo: false,\n      showInfo: false,\n      rtcClient: localClient._client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 32\n      }\n    });\n  }))));\n};\nexport default React.memo(MeetingPage);","map":{"version":3,"names":["React","useEffect","useState","useMemo","useGlobalState","useGlobalMutation","useRouter","RTCClient","Tooltip","StreamPlayer","StreamMenu","MeetingPage","routerCtx","stateCtx","mutationCtx","onUserPublished","remoteUser","mediaType","console","debug","uid","localClient","subscribe","then","mRemoteTrack","addRemoteUser","catch","err","toastError","getId","onUserUnPublished","removeRemoteUser","client","createClient","codec","mode","on","connectionStateChanged","muteVideo","setMuteVideo","muteAudio","setMuteAudio","isShareScreen","setShareScreen","VideoTrack","setVideoTrack","AudioTrack","setAudioTrack","remoteUsers","setRemoteUsers","config","token","channel","channelName","microphoneId","cameraId","host","history","params","URLSearchParams","window","location","search","roleParams","get","push","_created","_joined","_leave","setClientRole","join","startLive","mLocalVideoTrack","mLocalAudioTrack","stopLoading","info","toggleVideo","newValue","_client","unpublish","publish","toggleAudio","toggleShareScreen","stopLive","startShareScrren","code","stopShareScrren","doLeave","leave","destroy","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","isLocal","videoTrack","audioTrack","showInfo","profile","rtcClient","shareScreen","Object","values","map","key","memo"],"sources":["D:/Project/Freelance/Wm-Bank/API-Examples-Web/react/open-live/src/pages/meeting.jsx"],"sourcesContent":["import React, {useEffect, useState, useMemo} from 'react'\nimport {useGlobalState, useGlobalMutation} from '../utils/container'\nimport useRouter from '../utils/use-router'\nimport RTCClient from '../rtc-client'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport StreamPlayer from './meeting/stream-player'\nimport StreamMenu from './meeting/stream-menu'\n\nconst MeetingPage = () => {\n    const routerCtx = useRouter()\n    const stateCtx = useGlobalState()\n    const mutationCtx = useGlobalMutation()\n\n    const onUserPublished = (remoteUser, mediaType) => {\n        // remoteUser:\n        // mediaType: \"audio\" | \"video\" | \"all\"\n        console.debug(`onUserPublished ${remoteUser.uid}, mediaType= ${mediaType}`)\n        localClient.subscribe(remoteUser, mediaType)\n            .then(mRemoteTrack => {\n                addRemoteUser(remoteUser)\n            })\n            .catch(err => {\n                mutationCtx.toastError(\n                    `stream ${remoteUser.getId()} subscribe failed: ${err}`\n                )\n            })\n\n        if (mediaType === 'video' || mediaType === 'all') {\n\n        }\n\n        if (mediaType === 'audio' || mediaType === 'all') {\n\n        }\n    }\n\n    const onUserUnPublished = (remoteUser, mediaType) => {\n        // remoteUser:\n        // mediaType: \"audio\" | \"video\" | \"all\"\n        console.debug(`onUserUnPublished ${remoteUser.uid}`)\n        removeRemoteUser(remoteUser)\n        if (mediaType === 'video' || mediaType === 'all') {\n\n        }\n\n        if (mediaType === 'audio' || mediaType === 'all') {\n\n        }\n    }\n\n    const localClient = useMemo(() => {\n        const client = new RTCClient()\n        client.createClient({codec: stateCtx.codec, mode: stateCtx.mode})\n\n        client.on('connection-state-change', mutationCtx.connectionStateChanged)\n        client.on('user-published', onUserPublished)\n        client.on('user-unpublished', onUserUnPublished)\n\n        return client\n    }, [stateCtx.codec, stateCtx.mode])\n\n    const [muteVideo, setMuteVideo] = useState(stateCtx.muteVideo)\n    const [muteAudio, setMuteAudio] = useState(stateCtx.muteAudio)\n    const [isShareScreen, setShareScreen] = useState(false)\n    const [VideoTrack, setVideoTrack] = useState(null)\n    const [AudioTrack, setAudioTrack] = useState(null)\n    const [remoteUsers, setRemoteUsers] = useState({})\n\n    const addRemoteUser = (remoteUser) => {\n        remoteUsers[remoteUser.uid] = remoteUser\n        setRemoteUsers(remoteUsers)\n    }\n\n    const removeRemoteUser = (remoteUser) => {\n        delete remoteUsers[remoteUser.uid]\n        setRemoteUsers(remoteUsers)\n    }\n\n    const config = useMemo(() => {\n        return {\n            token: stateCtx.config.token,\n            channel: stateCtx.config.channelName,\n            microphoneId: stateCtx.config.microphoneId,\n            cameraId: stateCtx.config.cameraId,\n            uid: stateCtx.config.uid,\n            host: stateCtx.config.host\n        }\n    }, [stateCtx, muteVideo, muteAudio])\n\n    const history = routerCtx.history\n\n    const params = new URLSearchParams(window.location.search)\n\n    useEffect(() => {\n        const roleParams = params.get('role')\n        if (!config.channel && roleParams !== 'audience') {\n            history.push('/')\n        }\n    }, [config.channel, history, params])\n\n    useEffect(() => {\n        if (\n            config.channel &&\n            localClient._created &&\n            localClient._joined === false &&\n            localClient._leave === false\n        ) {\n            localClient.setClientRole(config.host ? 'host' : 'audience')\n            localClient.join(config.channel, config.token)\n                .then((uid) => {\n                    config.uid = uid\n\n                    if (config.host) {\n                        localClient.startLive(config.microphoneId, config.cameraId)\n                            .then(() => {\n                                setVideoTrack(localClient.mLocalVideoTrack)\n                                setAudioTrack(localClient.mLocalAudioTrack)\n                            })\n                    }\n                    mutationCtx.stopLoading()\n                })\n                .catch((err) => {\n                    mutationCtx.toastError(`join error: ${err.info}`)\n                    routerCtx.history.push('/')\n                })\n        }\n    }, [localClient, mutationCtx, config, routerCtx])\n\n    const toggleVideo = () => {\n        const newValue = !muteVideo\n        if (newValue) {\n            localClient._client.unpublish(VideoTrack)\n        } else {\n            localClient._client.publish(VideoTrack)\n        }\n        setMuteVideo(newValue)\n    }\n\n    const toggleAudio = () => {\n        const newValue = !muteAudio\n        if (newValue) {\n            localClient._client.unpublish(AudioTrack)\n        } else {\n            localClient._client.publish(AudioTrack)\n        }\n        setMuteAudio(newValue)\n    }\n\n    const toggleShareScreen = () => {\n        const newValue = !isShareScreen\n        if (newValue) {\n            setShareScreen(newValue)\n\n            setMuteVideo(false)\n            setMuteAudio(false)\n\n            localClient.stopLive()\n            localClient.startShareScrren()\n                .then(() => {\n                    setVideoTrack(localClient.mLocalVideoTrack)\n                    setAudioTrack(localClient.mLocalAudioTrack)\n                })\n                .catch((err) => {\n                    mutationCtx.toastError(`屏幕分享失败 code= ${err.code}`)\n                })\n        } else {\n            localClient.stopShareScrren()\n            localClient.startLive(config.microphoneId, config.cameraId)\n                .then(() => {\n                    setShareScreen(newValue)\n\n                    setVideoTrack(localClient.mLocalVideoTrack)\n                    setAudioTrack(localClient.mLocalAudioTrack)\n                })\n        }\n    }\n\n    const doLeave = () => {\n        localClient.leave().then(() => {\n            localClient.stopLive()\n            localClient.destroy()\n            routerCtx.history.push('/')\n        })\n    }\n\n    return (\n        <div className=\"meeting\">\n            <div className=\"current-view\">\n                <div className=\"nav\">\n                    <div className=\"avatar-container\">\n                        <div className=\"default-avatar\"></div>\n                        <div className=\"avatar-text\">Agora Test</div>\n                        <div className=\"like\"></div>\n                    </div>\n                    <Tooltip title=\"quit\">\n                        <div\n                            className=\"quit\"\n                            onClick={doLeave}\n                        ></div>\n                    </Tooltip>\n                </div>\n                <StreamPlayer\n                    uid={config.uid}\n                    isLocal={true}\n                    videoTrack={VideoTrack}\n                    audioTrack={AudioTrack}\n                    muteAudio={muteAudio}\n                    muteVideo={muteVideo}\n                    showInfo={stateCtx.profile}\n                    rtcClient={localClient._client}\n                >\n                    {config.host ? <StreamMenu\n                        muteAudio={muteAudio}\n                        muteVideo={muteVideo}\n                        shareScreen={isShareScreen}\n                        toggleVideo={toggleVideo}\n                        toggleAudio={toggleAudio}\n                        toggleShareScreen={toggleShareScreen}\n                    /> : null}\n                </StreamPlayer>\n                <div className=\"stream-container\">\n                    {Object.values(remoteUsers).map(remoteUser => {\n                        return <StreamPlayer\n                            key={`key-${remoteUser.uid}`}\n                            uid={remoteUser.uid}\n                            videoTrack={remoteUser.videoTrack}\n                            audioTrack={remoteUser.audioTrack}\n                            muteAudio={false}\n                            muteVideo={false}\n                            showInfo={false}\n                            rtcClient={localClient._client}\n                        />\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(MeetingPage)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}