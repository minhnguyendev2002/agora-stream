{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Freelance\\\\Wm-Bank\\\\API-Examples-Web\\\\react\\\\open-live\\\\src\\\\utils\\\\snackbar-wrapper.jsx\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useGlobalMutation } from './container';\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  customSnackbar: {\n    minWidth: '180px !important',\n    minHeight: '40px !important',\n    background: 'rgba(0,0,0,0.7)',\n    boxShadow: '0px 2px 4px 0px rgba(42,62,84,0.24)',\n    borderRadius: '30px',\n    justifyContent: 'center',\n    padding: '0 11px'\n  }\n}));\nSnackbarWrapper.propTypes = {\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n};\nfunction SnackbarWrapper(props) {\n  const classes = useStyles1();\n  const mutationCtx = useGlobalMutation();\n  const {\n    message,\n    onClose,\n    variant,\n    ...other\n  } = props;\n  const Icon = variantIcon[variant];\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      mutationCtx.removeTop();\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [mutationCtx]);\n  return /*#__PURE__*/React.createElement(SnackbarContent, Object.assign({\n    className: clsx(classes[variant], classes.customSnackbar),\n    \"aria-describedby\": \"client-snackbar\",\n    message: /*#__PURE__*/React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, variant === 'error' ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"error-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), message),\n    action: [/*#__PURE__*/React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: () => {\n        mutationCtx.removeTop();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      className: clsx(classes.icon),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }))]\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }));\n}\nexport default function CustomizedSnackbar(props) {\n  const handleClose = evt => {};\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.toasts.map((item, index) => /*#__PURE__*/React.createElement(Snackbar, {\n    key: index,\n    open: true,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    }\n    // onClose={handleClose}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarWrapper, {\n    onClose: handleClose,\n    variant: item.variant,\n    message: `${item.message}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"names":["React","useEffect","PropTypes","clsx","Snackbar","CheckCircleIcon","ErrorIcon","InfoIcon","CloseIcon","amber","green","IconButton","SnackbarContent","WarningIcon","makeStyles","useGlobalMutation","variantIcon","success","warning","error","info","useStyles1","theme","backgroundColor","palette","dark","primary","main","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","customSnackbar","minWidth","minHeight","background","boxShadow","borderRadius","justifyContent","padding","SnackbarWrapper","propTypes","string","onClose","func","variant","oneOf","isRequired","props","classes","mutationCtx","other","Icon","timer","setTimeout","removeTop","clearTimeout","createElement","Object","assign","className","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","action","key","color","onClick","CustomizedSnackbar","handleClose","evt","Fragment","toasts","map","item","index","open","anchorOrigin","vertical","horizontal"],"sources":["D:/Project/Freelance/Wm-Bank/API-Examples-Web/react/open-live/src/utils/snackbar-wrapper.jsx"],"sourcesContent":["import React, {useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport {amber, green} from '@material-ui/core/colors'\nimport IconButton from '@material-ui/core/IconButton'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {useGlobalMutation} from './container'\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon\n}\n\nconst useStyles1 = makeStyles((theme) => ({\n    success: {\n        backgroundColor: green[600]\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main\n    },\n    warning: {\n        backgroundColor: amber[700]\n    },\n    icon: {\n        fontSize: 20\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1)\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    customSnackbar: {\n        minWidth: '180px !important',\n        minHeight: '40px !important',\n        background: 'rgba(0,0,0,0.7)',\n        boxShadow: '0px 2px 4px 0px rgba(42,62,84,0.24)',\n        borderRadius: '30px',\n        justifyContent: 'center',\n        padding: '0 11px'\n    }\n}))\n\nSnackbarWrapper.propTypes = {\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\n}\n\nfunction SnackbarWrapper(props) {\n    const classes = useStyles1()\n    const mutationCtx = useGlobalMutation()\n    const {message, onClose, variant, ...other} = props\n    const Icon = variantIcon[variant]\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            mutationCtx.removeTop()\n        }, 1000)\n        return () => {\n            clearTimeout(timer)\n        }\n    }, [mutationCtx])\n    return (\n        <SnackbarContent\n            className={clsx(classes[variant], classes.customSnackbar)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n          {variant === 'error' ? (\n              <i className=\"error-icon\"/>\n          ) : (\n              <Icon className={clsx(classes.icon, classes.iconVariant)}/>\n          )}\n                    {message}\n        </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    onClick={() => {\n                        mutationCtx.removeTop()\n                    }}\n                >\n                    <CloseIcon className={clsx(classes.icon)}/>\n                </IconButton>\n            ]}\n            {...other}\n        />\n    )\n}\n\nexport default function CustomizedSnackbar(props) {\n    const handleClose = (evt) => {\n    }\n    return (\n        <>\n            {props.toasts.map((item, index) => (\n                <Snackbar\n                    key={index}\n                    open={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center'\n                    }}\n                    // onClose={handleClose}\n                >\n                    <SnackbarWrapper\n                        onClose={handleClose}\n                        variant={item.variant}\n                        message={`${item.message}`}\n                    />\n                </Snackbar>\n            ))}\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}